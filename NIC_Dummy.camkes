/*
 * NIC-Dummy CAmkES Component
 *
 * Copyright (C) 2020-2021, HENSOLDT Cyber GmbH
 *
 *
 * to be used as:
 *
 *   #include "NIC_Dummy/NIC_Dummy.camkes"
 *   NIC_Dummy_COMPONENT_DEFINE(NIC_Dummy_Driver_1, 4096)
 *   NIC_Dummy_COMPONENT_DEFINE(NIC_Dummy_Driver_2, 4096)
 */

#pragma once

import <std_connector.camkes>;
#include <if_OS_Nic.camkes>
import <if_OS_Logger.camkes>;


//------------------------------------------------------------------------------
// Declare the NIC_Dummy with a given type name:
//   NIC_Dummy_COMPONENT_DEFINE(
//       <name>,<bufferSize>
//   )
#define NIC_Dummy_COMPONENT_DEFINE( \
    _name_, \
    _ringbuffer_size_) \
    \
    component _name_ { \
        IF_OS_NIC_PROVIDE(nic, _ringbuffer_size_) \
        \
        maybe uses      if_OS_Logger  logServer_rpc; \
        maybe dataport  Buf           logServer_port; \
        maybe consumes  EventReady    logServer_event_ready; \
    }


//------------------------------------------------------------------------------
// Connect the optional logger:
//   NIC_Dummy_INSTANCE_CONNECT_OPTIONAL_LOGGER(
//       <instance>,
//       <logger>.<rpc>, <logger>.<port_to>
//   )
#define NIC_Dummy_INSTANCE_CONNECT_OPTIONAL_LOGGER( \
    _inst_, \
    _log_rpc_, \
    _log_port_) \
    \
    connection seL4RPCCall \
        _inst_ ## _log_rpc( \
            from    _inst_.logServer_rpc, \
            to      _log_rpc_); \
    connection seL4SharedData \
        _inst_ ## _log_port( \
            from    _inst_.logServer_port, \
            to      _log_port_);
